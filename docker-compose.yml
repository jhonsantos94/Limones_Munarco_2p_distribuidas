version: '3.8'

networks:
  medical-network:
    driver: bridge

services:
  # CockroachDB Cluster para datos médicos críticos
  cockroachdb1:
    image: cockroachdb/cockroach:latest
    container_name: medical-crdb-1
    hostname: crdb-1
    networks:
      - medical-network
    ports:
      - "26257:26257"
      - "8080:8080"
    volumes:
      - cockroach_data1:/cockroach/cockroach-data
    command: start --insecure --join=crdb-1,crdb-2,crdb-3

  cockroachdb2:
    image: cockroachdb/cockroach:latest
    container_name: medical-crdb-2
    hostname: crdb-2
    networks:
      - medical-network
    volumes:
      - cockroach_data2:/cockroach/cockroach-data
    command: start --insecure --join=crdb-1,crdb-2,crdb-3

  cockroachdb3:
    image: cockroachdb/cockroach:latest
    container_name: medical-crdb-3
    hostname: crdb-3
    networks:
      - medical-network
    volumes:
      - cockroach_data3:/cockroach/cockroach-data
    command: start --insecure --join=crdb-1,crdb-2,crdb-3

  # RabbitMQ para mensajería médica en tiempo real
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: medical-rabbitmq
    hostname: medical-rabbitmq
    networks:
      - medical-network
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=medical_admin
      - RABBITMQ_DEFAULT_PASS=medical_secure_pass
      - RABBITMQ_DEFAULT_VHOST=medical_system
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: medical-redis
    hostname: medical-redis
    networks:
      - medical-network
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Prometheus para monitoreo
  prometheus:
    image: prom/prometheus:v2.46.0
    container_name: medical-prometheus
    hostname: medical-prometheus
    networks:
      - medical-network
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    depends_on:
      - rabbitmq
      - cockroachdb1

  # Grafana para visualización
  grafana:
    image: grafana/grafana:latest
    container_name: medical-grafana
    hostname: medical-grafana
    networks:
      - medical-network
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=medical_grafana_admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  cockroach_data1:
  cockroach_data2:
  cockroach_data3:
  rabbitmq_data:
  rabbitmq_logs:
  redis_data:
  prometheus_data:
  grafana_data: